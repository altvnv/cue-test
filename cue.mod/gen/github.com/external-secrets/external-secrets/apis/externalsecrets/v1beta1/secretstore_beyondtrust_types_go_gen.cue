// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/external-secrets/external-secrets/apis/externalsecrets/v1beta1

package v1beta1

import esmeta "github.com/external-secrets/external-secrets/apis/meta/v1"

#BeyondTrustProviderSecretRef: {
	// Value can be specified directly to set a value without using a secret.
	// +optional
	value?: string @go(Value)

	// SecretRef references a key in a secret that will be used as value.
	// +optional
	secretRef?: null | esmeta.#SecretKeySelector @go(SecretRef,*esmeta.SecretKeySelector)
}

// Configures a store to sync secrets using BeyondTrust Password Safe.
#BeyondtrustAuth: {
	// +required - API OAuth Client ID.
	clientId?: null | #BeyondTrustProviderSecretRef @go(ClientID,*BeyondTrustProviderSecretRef)

	// +required - API OAuth Client Secret.
	clientSecret?: null | #BeyondTrustProviderSecretRef @go(ClientSecret,*BeyondTrustProviderSecretRef)

	// Content of the certificate (cert.pem) for use when authenticating with an OAuth client Id using a Client Certificate.
	certificate?: null | #BeyondTrustProviderSecretRef @go(Certificate,*BeyondTrustProviderSecretRef)

	// Certificate private key (key.pem). For use when authenticating with an OAuth client Id
	certificateKey?: null | #BeyondTrustProviderSecretRef @go(CertificateKey,*BeyondTrustProviderSecretRef)
}

// Configures a store to sync secrets using BeyondTrust Password Safe.
#BeyondtrustServer: {
	// +required - BeyondTrust Password Safe API URL. https://example.com:443/beyondtrust/api/public/V3.
	apiUrl: string @go(APIURL)

	// The secret retrieval type. SECRET = Secrets Safe (credential, text, file). MANAGED_ACCOUNT = Password Safe account associated with a system.
	retrievalType?: string @go(RetrievalType)

	// A character that separates the folder names.
	separator?: string @go(Separator)

	// +required - Indicates whether to verify the certificate authority on the Secrets Safe instance. Warning - false is insecure, instructs the BT provider not to verify the certificate authority.
	verifyCA: bool @go(VerifyCA)

	// Timeout specifies a time limit for requests made by this Client. The timeout includes connection time, any redirects, and reading the response body. Defaults to 45 seconds.
	clientTimeOutSeconds?: int @go(ClientTimeOutSeconds)
}

#BeyondtrustProvider: {
	// Auth configures how the operator authenticates with Beyondtrust.
	auth?: null | #BeyondtrustAuth @go(Auth,*BeyondtrustAuth)

	// Auth configures how API server works.
	server?: null | #BeyondtrustServer @go(Server,*BeyondtrustServer)
}
